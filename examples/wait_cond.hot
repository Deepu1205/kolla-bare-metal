heat_template_version: pike

parameters:

  network:
    type: string
    description: Network name
    constraints:
      - custom_constraint: neutron.network
  server_image:
    type: string
    description: Server Image (Ubuntu 16.04)
    constraints:
      - custom_constraint: glance.image
  server_flavor:
    type: string
    description: Server Flavor
    constraints:
      - custom_constraint: nova.flavor
  security_group:
    type: string
    description: Security Group for Web Server
    constraints:
      - custom_constraint: neutron.security_group

resources:
  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: {get_resource: wait_handle}
      count: 1
      timeout: 300

  wait_handle:
    type: OS::Heat::WaitConditionHandle

  server1:
    type: OS::Nova::Server
    properties:
      name: server1
      image: { get_param: server_image }
      flavor: { get_param: server_flavor }
      security_groups: [{ get_resource: security_group }]
      key_name: { get_param: key_name }
      networks:
        - network: { get_resource: wordpress_network }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/sh     
            localipv4=$(curl -ss http://169.254.169.254/2009-04-04/meta-data/local-ipv4)
            wc_notify --data-binary "{\"status\": \"SUCCESS\", \"data\": \"$localipv4\"}"
          params:
            wc_notify: { get_attr: [wait_handle, curl_cli] }

server2:
    type: OS::Nova::Server
    properties:
      name: server2
      image: { get_param: server_image }
      flavor: { get_param: server_flavor }
      security_groups: [{ get_resource: security_group }]
      key_name: { get_param: key_name }
        networks:
        - network: { get_resource: wordpress_network }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            From nobody Fri Dec  9 00:31:04 2016
            Content-Type: multipart/mixed; boundary="==BOUNDARY=="
            MIME-Version: 1.0
            --==BOUNDARY==
            MIME-Version: 1.0
            Content-Type: text/x-shellscript; charset="us-ascii"
            #!/bin/bash
            echo "$wc_data" >> /tmp/data.json
            --==BOUNDARY==
            MIME-Version: 1.0
            Content-Type: text/x-include-url; charset="us-ascii"
            #include
            https://raw.githubusercontent.com/kris-at-occ/kolla-bare-metal/master/examples/wait_cond1.yml
            --==BOUNDARY==--
          params:
            wc_data: { get_attr: [wait_condition, data] }
